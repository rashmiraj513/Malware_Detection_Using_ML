# Import the necessary packages
import os
import time
import pyfiglet

# Function to exit from the program
def exit(message=""):
  '''
  Function to exit the program with an optional message and delay.

  Args:
    message (str): Optional message to display before exiting. Defaults to an empty string.

  Returns:
    None
  '''
  # Concatenate the message with additional text and newline
  message += "!!!\nExiting..."
  # Print the message
  print(message)
  # Add a slight delay before exiting (for better visibility)
  time.sleep(0.1)
  # Exit the program
  os.system('exit')

# Function to clear the screen
def clear_screen():
  '''
  Function to clear the terminal screen.

  Args:
    None

  Returns:
    None
  '''
  # Use the 'clear' command to clear the terminal screen
  os.system('clear')

# Function to run the `malware_test.py`
def run():
  '''
  Function to execute a command based on user input (file path and name).

  Args:
    None

  Returns:
    None
  '''
  # Get user input for the file path and name with .exe extension
  file = input("\n\nEnter the path and name with .exe extension of the file: ")
  
  # Create the command to run the malware_test.py script with the specified file
  command = "python malware_test.py {}".format(file)
  
  # Print the command being executed
  print("\nExecuting:", command)
  
  # Execute the command using the os.system() function
  os.system(command)

def start():
  '''
  Main function to start the Malware Detector program.

  Args:
    None

  Returns:
    None
  '''
  # Uncomment the line below to clear the screen before starting
  # clear_screen()
  
  # Print the ASCII art title using pyfiglet
  print(pyfiglet.figlet_format("Malware Detector"))
  
  # Print welcome message and menu options
  print("\nWelcome to Malware Detector \n")
  print("1: For scanning a PE (Portable Executable)\n")
  print("2: Other than '1' for Exit\n")

  # Get user input for choice
  try:
    # Attempt to convert input to an integer
    choice = int(input("Enter your choice: "))  
  except ValueError:
    # Exit if input is not an integer
    exit("\nError: Choice must be an integer")  

  # Check if the user's choice is 1 (PE Scanner)
  if(choice == 1):
    # Run the PE Scanner function
    run()
      
    # Ask the user if they want to search again
    choice = input("\n\nDo you want to search again? (y / n): ")
      
    # Validate the input for repeat search
    if(choice not in ['Y', 'N', 'n', 'y']):
      # Exit if input is not 'y' or 'n'
      exit("\nBad Input")  
    else:
      if(choice in ['Y', 'y']):
        # Restart the program if user chooses 'y'
        start()  
      else:
        # Exit with a message if user chooses 'n'
        exit("\nOkay")  
  else:
    # Exit with a message if user chooses anything other than 1
    exit("\nBad Input")  

# Driver Code
if __name__ == '__main__':
  # Call the start function
  start()